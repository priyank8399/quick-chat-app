{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _toConsumableArray from\"C:/Users/priya/Desktop/quick-chat-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/priya/Desktop/quick-chat-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import queryString from'query-string';import io from'socket.io-client';import'./Chat.css';import InfoBar from'../InfoBar/InfoBar';import Input from'../Input/Input';import Messages from'../Messages/Messages';import Message from'../Message/Message';var socket;var Chat=function Chat(_ref){var location=_ref.location;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),room=_useState4[0],setRoom=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),messages=_useState6[0],setMessages=_useState6[1];// Messages array\nvar _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),message=_useState8[0],setMessage=_useState8[1];// Each individual message\nvar ENDPOINT='https://group-chat-react-node.herokuapp.com/';useEffect(function(){var _queryString$parse=queryString.parse(location.search),name=_queryString$parse.name,room=_queryString$parse.room;socket=io(ENDPOINT);//Modify this to change target server\nconsole.log('test');setName(name);setRoom(room);socket.emit('login',{name:name,room:room},function(){//error\n});return function(){socket.emit('disconnect');socket.off();};},[ENDPOINT,location.search]);useEffect(function(){socket.on('message',function(message){setMessages([].concat(_toConsumableArray(messages),[message]));});},[messages]);//sending message (sendMessage())\nvar sendMessage=function sendMessage(event){event.preventDefault();// Prevent a full refresh\nif(message){socket.emit('sendMessage',message,function(){return setMessage('');});}};console.log(message,messages);return/*#__PURE__*/_jsx(\"div\",{className:\"outerContainer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(InfoBar,{room:room}),/*#__PURE__*/_jsx(Messages,{messages:messages,name:name}),/*#__PURE__*/_jsx(Input,{message:message,setMessage:setMessage,sendMessage:sendMessage})]})});};export default Chat;","map":{"version":3,"sources":["C:/Users/priya/Desktop/quick-chat-app/client/src/components/Chat/Chat.js"],"names":["React","useEffect","useState","queryString","io","InfoBar","Input","Messages","Message","socket","Chat","location","name","setName","room","setRoom","messages","setMessages","message","setMessage","ENDPOINT","parse","search","console","log","emit","off","on","sendMessage","event","preventDefault"],"mappings":"saAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CACA,MAAOC,CAAAA,EAAP,KAAe,kBAAf,CACA,MAAO,YAAP,CAEA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,GAAIC,CAAAA,MAAJ,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eACHT,QAAQ,CAAC,EAAD,CADL,wCACpBU,IADoB,eACdC,OADc,8BAEHX,QAAQ,CAAC,EAAD,CAFL,yCAEpBY,IAFoB,eAEdC,OAFc,8BAGKb,QAAQ,CAAC,EAAD,CAHb,yCAGpBc,QAHoB,eAGVC,WAHU,eAGmB;AAHnB,eAIGf,QAAQ,CAAC,EAAD,CAJX,yCAIpBgB,OAJoB,eAIXC,UAJW,eAIiB;AAC5C,GAAMC,CAAAA,QAAQ,CAAG,8CAAjB,CAEAnB,SAAS,CAAC,UAAM,wBACSE,WAAW,CAACkB,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CADT,CACLV,IADK,oBACLA,IADK,CACCE,IADD,oBACCA,IADD,CAEZL,MAAM,CAAGL,EAAE,CAACgB,QAAD,CAAX,CAAuB;AACvBG,OAAO,CAACC,GAAR,CAAY,MAAZ,EACAX,OAAO,CAACD,IAAD,CAAP,CACAG,OAAO,CAACD,IAAD,CAAP,CAEAL,MAAM,CAACgB,IAAP,CAAY,OAAZ,CAAqB,CAAEb,IAAI,CAAJA,IAAF,CAAQE,IAAI,CAAJA,IAAR,CAArB,CAAqC,UAAM,CACvC;AACH,CAFD,EAIA,MAAO,WAAM,CACTL,MAAM,CAACgB,IAAP,CAAY,YAAZ,EACAhB,MAAM,CAACiB,GAAP,GACH,CAHD,CAIH,CAfQ,CAeN,CAACN,QAAD,CAAWT,QAAQ,CAACW,MAApB,CAfM,CAAT,CAkBArB,SAAS,CAAC,UAAM,CACZQ,MAAM,CAACkB,EAAP,CAAU,SAAV,CAAqB,SAACT,OAAD,CAAa,CAC9BD,WAAW,8BAAKD,QAAL,GAAeE,OAAf,GAAX,CACH,CAFD,EAGH,CAJQ,CAIN,CAACF,QAAD,CAJM,CAAT,CAMA;AACA,GAAMY,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,KAAK,CAAI,CACzBA,KAAK,CAACC,cAAN,GAAwB;AACxB,GAAGZ,OAAH,CAAY,CACRT,MAAM,CAACgB,IAAP,CAAY,aAAZ,CAA2BP,OAA3B,CAAoC,iBAAMC,CAAAA,UAAU,CAAC,EAAD,CAAhB,EAApC,EACH,CACJ,CALD,CAOAI,OAAO,CAACC,GAAR,CAAYN,OAAZ,CAAqBF,QAArB,EAEA,mBACI,YAAK,SAAS,CAAC,gBAAf,uBACI,aAAK,SAAS,CAAC,WAAf,wBACI,KAAC,OAAD,EAAS,IAAI,CAAEF,IAAf,EADJ,cAEI,KAAC,QAAD,EAAU,QAAQ,CAAEE,QAApB,CAA8B,IAAI,CAAEJ,IAApC,EAFJ,cAGI,KAAC,KAAD,EAAO,OAAO,CAAIM,OAAlB,CAA2B,UAAU,CAAIC,UAAzC,CAAqD,WAAW,CAAIS,WAApE,EAHJ,GADJ,EADJ,CAaH,CAtDD,CAwDA,cAAelB,CAAAA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport queryString from 'query-string';\r\nimport io from 'socket.io-client';\r\nimport './Chat.css';\r\n\r\nimport InfoBar from '../InfoBar/InfoBar';\r\nimport Input from '../Input/Input';\r\nimport Messages from '../Messages/Messages';\r\nimport Message from '../Message/Message';\r\nlet socket;\r\n\r\nconst Chat = ({ location }) => {\r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [messages, setMessages] = useState([]); // Messages array\r\n    const [message, setMessage] = useState(''); // Each individual message\r\n    const ENDPOINT = 'https://group-chat-react-node.herokuapp.com/';\r\n    \r\n    useEffect(() => {\r\n        const {name, room} = queryString.parse(location.search);\r\n        socket = io(ENDPOINT); //Modify this to change target server\r\n        console.log('test');\r\n        setName(name);\r\n        setRoom(room);\r\n\r\n        socket.emit('login', { name, room }, () => {\r\n            //error\r\n        });\r\n\r\n        return () => {\r\n            socket.emit('disconnect');\r\n            socket.off();\r\n        }\r\n    }, [ENDPOINT, location.search]);\r\n\r\n\r\n    useEffect(() => {\r\n        socket.on('message', (message) => {\r\n            setMessages([...messages, message]);\r\n        })\r\n    }, [messages]);\r\n\r\n    //sending message (sendMessage())\r\n    const sendMessage = event => {\r\n        event.preventDefault(); // Prevent a full refresh\r\n        if(message) {\r\n            socket.emit('sendMessage', message, () => setMessage(''));\r\n        }\r\n    }\r\n\r\n    console.log(message, messages);\r\n\r\n    return (\r\n        <div className=\"outerContainer\">\r\n            <div className=\"container\">\r\n                <InfoBar room={room} />\r\n                <Messages messages={messages} name={name}/>\r\n                <Input message = {message} setMessage = {setMessage} sendMessage = {sendMessage} />\r\n                {/*<input value = {message}\r\n                onChange = {(event) => setMessage(event.target.value)}\r\n                onKeyPress={event => event.key === 'Enter' ? sendMessage(event) : null}\r\n                />*/}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}