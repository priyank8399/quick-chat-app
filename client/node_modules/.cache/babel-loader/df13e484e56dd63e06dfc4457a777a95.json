{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\priya\\\\Desktop\\\\quick-chat-app\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT); //Modify this to change target server\n\n    setName(name);\n    setRoom(room);\n    socket.emit('login', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Chat\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"d0IL40A6in8C0M9kpYxzMuyI8u0=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/priya/Desktop/quick-chat-app/client/src/components/Chat/Chat.js"],"names":["React","useEffect","useState","queryString","io","socket","Chat","location","name","setName","room","setRoom","ENDPOINT","parse","search","emit","error","alert"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMU,QAAQ,GAAG,gBAAjB;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAACO,MAAAA,IAAD;AAAOE,MAAAA;AAAP,QAAeP,WAAW,CAACU,KAAZ,CAAkBN,QAAQ,CAACO,MAA3B,CAArB;AACAT,IAAAA,MAAM,GAAGD,EAAE,CAACQ,QAAD,CAAX,CAFY,CAEW;;AAEvBH,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,CAACU,IAAP,CAAY,OAAZ,EAAqB;AAACP,MAAAA,IAAD;AAAOE,MAAAA;AAAP,KAArB,EAAoCM,KAAD,IAAW;AAC1C,UAAGA,KAAH,EAAS;AACLC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACH;AACJ,KAJD;AAKH,GAZQ,EAYN,CAACJ,QAAD,EAAWL,QAAQ,CAACO,MAApB,CAZM,CAAT;AAcA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CArBD;;GAAMR,I;;KAAAA,I;AAuBN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport queryString from 'query-string';\r\nimport io from 'socket.io-client';\r\n\r\nlet socket;\r\n\r\nconst Chat = ({ location }) => {\r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const ENDPOINT = 'localhost:5000';\r\n    useEffect(() => {\r\n        const {name, room} = queryString.parse(location.search);\r\n        socket = io(ENDPOINT); //Modify this to change target server\r\n        \r\n        setName(name);\r\n        setRoom(room);\r\n\r\n        socket.emit('login', {name, room}, (error) => {\r\n            if(error){\r\n                alert(error);\r\n            }\r\n        });\r\n    }, [ENDPOINT, location.search]);\r\n\r\n    return (\r\n        <h1>Chat</h1>\r\n    );\r\n}\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}